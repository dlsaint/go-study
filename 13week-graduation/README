对当下自己项目中的业务，进行一个微服务改造，需要考虑如下技术点：
1. 微服务架构（BFF、Service、Admin、Job、Task 分模块）
2. API 设计（包括 API 定义、错误码规范、Error 的使用）
3. gRPC 的使用
4. Go 项目工程化（项目结构、DI、代码分层、ORM 框架）
5. 并发的使用（errgroup 的并行链路请求）
6. 微服务中间件的使用（ELK、Opentracing、Prometheus、Kafka）
7. 缓存的使用优化（一致性处理、Pipeline 优化）

ps: 公司的项目不能发上来, 我只能说说我大致的处理办法, 我在公司主要负责评论的业务, 这个项目历史问题比较严重

1. 当前的业务规划, 评论服务, 评论数服务, 点赞服务, 后台项目四个微服务组成评论中台, 因为人员配备, BFF跟Service是合在一起的, Job跟Task都是几个微服务的子项目,
负责做定时任务跟db订阅的业务
2. 当前api的设计比较随意, 错误码跟error的使用不规范,
3. gRPC这个我觉得比较难在一个微服务上实现, 需要公司自顶而下的推广这个技术, 所以不太考虑引入grpc
4. 项目目录分层, 当前情况项目比较老,
5. 请求下游服务时候
6. 中间件:
    1. ELK主要还是使用在后台的数据搜索, 业务有数据改动时候有会订阅改动同步到elk,
    2. Opentracing, Prometheus: 链路跟踪跟监控有公司有基础平台已经提供
    3. kafka, 跟其他项目通信的时候是使用kafka做通知
7. 缓存
    1. 一致性处理
    2. pipeline优化


