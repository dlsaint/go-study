#题目
1. 使用 redis benchmark 工具, 测试 10 20 50 100 200 1k 5k 字节 value 大小，redis get set 性能。
2. 写入一定量的 kv 数据, 根据数据大小 1w-50w 自己评估, 结合写入前后的 info memory 信息 , 分析上述不同 value 大小下，平均每个 key 的占用内存空间。

#机器配置(机器比较旧):
cpu: Pentium(R) Dual-Core CPU T4400  @ 2.20GHz 双核
内存: 2条2G的DDR3 Speed: 800 MT/s

#redis版本: 6.0.0

题目1. 使用 redis benchmark 工具, 测试 10 20 50 100 200 1k 5k 字节 value 大小，redis get set 性能。
使用的命令, redis-benchmark -h 127.0.0.1 -p 6379 -c 50 -n 100000 -r 100000 -d {x} -t set,get -q, -d 指定大小
1. 10字节: SET: 10640.56 requests per second  GET: 10608.95 requests per second
2. 20字节: SET: 10629.25 requests per second  GET: 10511.93 requests per second
3. 50字节: SET: 9942.33 requests per second  GET: 10646.23 requests per second
4. 100字节: SET: 10569.71 requests per second  GET: 10565.24 requests per second
5. 200字节: SET: 10526.32 requests per second  GET: 9640.41 requests per second
6. 1k字节: SET: 9946.29 requests per second  GET: 10370.22 requests per second
7. 5k字节大小: SET: 7463.24 requests per second  GET: 8751.97 requests per second
结论: 结果大致符合预期, 字节越大延时越大, 不确定是不是环境问题, 有些值不是太合理, 还需要再分析

题目2. 写入一定量的 kv 数据, 根据数据大小 1w-50w 自己评估, 结合写入前后的 info memory 信息 , 分析上述不同 value 大小下，平均每个 key 的占用内存空间。
写了生成数据的脚本, 在main.go, 结果如下
10字节, 10w数据量, 平均占空间82字节
20字节, 10w数据量, 平均占空间90字节
50字节, 10w数据量, 平均占空间122字节
100字节, 10w数据量, 平均占空间178字节
200字节, 10w数据量, 平均占空间290字节
1024字节, 10w数据量, 平均占空间1349字节
5120字节, 10w数据量, 平均占空间6213字节
